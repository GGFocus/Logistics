<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.numberONe.mapper.CheckResultMapper">
	<!--mybatis ehcache缓存配置 -->
	<!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 <cache type="org.mybatis.caches.ehcache.LoggingEhcache" 
		/> -->
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->
	<!-- 以下与实体类的中字段一致 -->
	<sql id="selectId">
		id,
		monthId,
		month,
		evaluatorId,
		evaluator,
		operationPostId,
		operationPost,
		checkOptionId,
		checkOption,
		checkResult,
		description,
		createTime,
		deletestatus
	</sql>
	
	<insert id="addCheckResultList"  parameterType="java.util.List">
		insert into check_result (
		monthId,
		month,
		evaluatorId,
		evaluator,
		operationPostId,
		operationPost,
		checkOptionId,
		checkOption)
  			values
  		<foreach collection="list" item="item" index="index"
   			separator=",">
   		(#{item.monthId}
   		,#{item.month}
   		,#{item.evaluatorId}
   		,#{item.evaluator}
   		,#{item.operationPostId}
   		,#{item.operationPost}
   		,#{item.checkOptionId}
   		,#{item.checkOption})
  		</foreach>
	</insert>
	
	<select id="findByPage" resultType="com.numberONe.entity.CheckResultFormMap">
		select
		<include refid="selectId" />
		from check_result
		where 1 = 1
		<if test="operationPostId != null and operationPostId != ''">
		and operationPostId like '%${operationPostId}%'
		</if>
	</select>

	<select id="findCheckResultAllField" resultType="com.numberONe.entity.CheckResultFormMap" parameterType="com.numberONe.entity.CheckResultFormMap">
		select
		*
		from view_check_result
		where 1 = 1
		<if test="evaluatorRoleId != null and evaluatorRoleId != ''">
			and evaluatorRoleId =#{evaluatorRoleId}
		</if>
		<if test="month != null and month != ''">
			and month =#{month}
		</if>
		<if test="evaluatorId != null and evaluatorId != ''">
			and evaluatorId =#{evaluatorId}
		</if>
		<if test="operationPostId != null and operationPostId != ''">
			and operationPostId =#{operationPostId}
		</if>


	</select>


	
	<select id="findUserRate" resultType="map">
		SELECT checkOption,AVG(checkResult) AS 'avg' FROM check_result 
        WHERE operationPostId =#{0} AND monthId = #{1} AND checkOptionId = #{2}
        AND id NOT IN (
        SELECT id FROM (
        SELECT id FROM check_result
        WHERE operationPostId =#{0} AND monthId = #{1} AND checkOptionId = #{2} ORDER BY  checkResult DESC LIMIT 1
        ) t1
        UNION ALL
        SELECT id FROM (
        SELECT id FROM check_result
        WHERE operationPostId =#{0} AND monthId = #{1} AND checkOptionId = #{2} ORDER BY  checkResult ASC LIMIT 1 
        ) t2 )
	</select>
	
   
    <select id="findUserRateOption" resultType="int">
        SELECT DISTINCT checkOptionId FROM check_result 
        WHERE  operationPostId =#{0} AND monthId = #{1}
    </select>
    
    <update id="autoRate" parameterType="com.numberONe.entity.CheckResultFormMap">
    
        UPDATE  `check_result` 
        SET checkResult = '10' 
        WHERE `monthId` = #{monthId} AND `evaluatorId` = #{evaluatorId}
    </update>
	
</mapper>